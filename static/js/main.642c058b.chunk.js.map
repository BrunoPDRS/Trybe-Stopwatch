{"version":3,"sources":["assets/space-background.svg","styles/global.js","utils/convertSecondsToTimeString.js","utils/convertTimeStringToSeconds.js","utils/addNumberToTimeString.js","components/Button/styles.js","components/Button/index.jsx","components/Buttons/styles.js","components/Buttons/index.jsx","assets/panel.svg","components/Timer/styles.js","components/Timer/index.jsx","components/Title/styles.js","components/Title/index.jsx","App.js","index.js"],"names":["createGlobalStyle","backgroundImg","convertSecondsToTimeString","timer","minutes","Math","floor","seconds","timerMinutes","toString","padStart","timerSeconds","convertTimeStringToSeconds","display","split","parseInt","addNumberToTimeString","numbers","length","currentArray","sizeDifference","index","splice","join","replace","ButtonContainer","styled","button","props","children","css","Button","disabled","isDisabled","onClick","Container","div","Buttons","buttonsContent","map","Panel","panelImg","Screen","test","ButtonsContainer","Timer","useState","setTimer","isActive","setIsActive","isOver","setIsOver","timeoutID","setTimeoutID","inputNumbers","setInputNumbers","setDisplay","hasTime","isBackMsg","useEffect","timeout","setTimeout","alert","handleStart","useCallback","startingTime","handlePause","clearTimeout","handleReset","handleAddToTimer","event","newNumber","target","innerText","isControl","size","TitleContainer","h1","Title","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.642c058b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/space-background.94453a69.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport backgroundImg from '../assets/space-background.svg';\n\nexport default createGlobalStyle`\n  *, body {\n    padding: 0;\n    margin: 0;\n    outline: 0;\n    box-sizing: border-box;\n    font-size: 62.5%;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n      Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  }\n\n  body {\n    overflow-x: hidden;\n    max-width: 100vw;\n    height: 100%;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    user-select: none;\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-repeat: no-repeat;\n  }\n\n  main {\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    margin: 0 auto;\n  }\n\n  h1 {\n    text-align: center;\n  }\n`;","const convertSecondsToTimeString = (timer) => {\n  const minutes = Math.floor(timer/60);\n  const seconds = timer - (minutes * 60);\n\n  const timerMinutes = minutes.toString().padStart(2, 0);\n  const timerSeconds = seconds.toString().padStart(2, 0);\n\n  return `${timerMinutes}:${timerSeconds}`;\n}\n\nexport default convertSecondsToTimeString;\n","const convertTimeStringToSeconds = (display) => {\n  const [minutes, seconds] = display.split(':');\n  const minutesToSeconds = parseInt(minutes) * 60;\n  \n  const timeInSeconds = minutesToSeconds + parseInt(seconds);\n\n  return timeInSeconds;\n}\n\nexport default convertTimeStringToSeconds;","const addNumberToTimeString = (numbers) => {\n  const maxDigits = 4;\n\n  if (numbers.length > maxDigits) return '99:59';\n\n  const currentArray = [...numbers];\n  const sizeDifference = maxDigits - currentArray.length;\n\n  for (let index = 0; index < sizeDifference; index += 1) {\n    currentArray.splice(0, 0, \"0\");\n  }\n\n\n  const timeStamp = currentArray.join('');\n\n  return timeStamp.replace(\n    /(\\d{2})(\\d{2})/,\n    \"$1:$2\"\n  );\n}\n\nexport default addNumberToTimeString;\n","import styled, { css } from 'styled-components';\n\nexport const ButtonContainer = styled.button`\n  background: #686868;\n  border: inset 4px #505050;\n  border-radius: 4px;\n  box-shadow: 0 0 0 4px #0a0a0a, 4px 4px 16px black;\n  color: #FAFAFA;\n  cursor: pointer;\n  font-size: 4rem;\n  font-weight: bold;\n  height: 31.3%;\n  margin: 6px;\n  text-align: center;\n  transition: 0.1s;\n  width: 25%;\n\n  ${(props) => typeof props.children !== 'number' && css`\n    align-items: center;\n    display: flex;\n    height: 60px;\n    justify-content: center;\n    width: 60px;\n  `}\n  \n  svg {\n    margin: auto;\n  }\n\n  &:active {\n    transform: scale(0.95);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.6;\n  }\n`;\n","import React from 'react';\n\nimport { ButtonContainer } from './styles';\n\nconst Button = (props) => (\n  <ButtonContainer disabled={props.isDisabled} onClick={props.onClick}>{props.children}</ButtonContainer>\n);\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 25px 0;\n  width: 96%;\n  height: 100%;\n  padding: 5px;\n  border-radius: 1px;\n`;\n","import React from 'react';\n\nimport Button from '../Button';\n\nimport { Container } from './styles';\n\nconst Buttons = (props) => {\n  const { buttonsContent } = props;\n  const { onClick, isDisabled }= props;\n  return (\n    <Container>\n      {buttonsContent.map(button => \n        <Button \n          key={button}\n          isDisabled={isDisabled}\n          onClick={onClick}>\n            {button}\n        </Button>\n      )}\n    </Container>\n  );\n};\n\nexport default Buttons;","export default __webpack_public_path__ + \"static/media/panel.6f27a077.svg\";","import styled, { css } from 'styled-components';\n\nimport panelImg from '../../assets/panel.svg';\n\nexport const Container = styled.div`\n  align-items: center;\n  display: flex;\n  height: fit-content;\n  justify-content: center;\n  padding: 10px;\n  width: 86%;\n  z-index: 5;\n  \n  @media screen and (max-width: 768px) {\n    flex-wrap: wrap;\n  }\n`;\n\nexport const Panel = styled.div`\n  border: 8px solid black;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: url(${panelImg});\n  background-size: contain;\n  background-repeat: no-repeat;\n  width: 410px;\n  margin: 0 15px;\n  min-width: 368px;\n  min-height: 417px;\n\n  > div {\n    min-height: 353px;\n    min-width: 79.8%;\n    display: flex;\n    flex-direction: column;\n    margin: 0 12px;\n    justify-content: center;\n    align-items: center;\n    padding: 4%;\n\n    div {\n      display: flex;\n    }\n  }\n`;\n\nexport const Screen = styled.div`\n  align-items: center;\n  background: black;\n  border-radius: 1px;\n  box-shadow: \n    0px 0px 0px 4px rgba(57, 57, 57, 1),\n    0px 0px 0px 9px rgba(197, 197, 197, 1);\n  display: flex;\n  flex: 1;\n  height: 100%;\n  justify-content: center;\n  margin: 25px 0;\n  padding: 5px;\n  position: relative;\n  width: 100%;\n\n  h1 {\n    color: #00c000;\n    font-size: 8rem;\n    font-weight: 800;\n\n    ${({ children }) => \n      !(/^\\d{2}:\\d{2}$/\n        .test(children.props.children)) &&\n        css`\n          font-size: 4rem;\n        `\n    }\n  }\n`;\n\nexport const ButtonsContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  width: 96%;\n  height: 100%;\n  padding-bottom: 5px;\n  border-radius: 1px;\n`;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport convertSecondsToTimeString from '../../utils/convertSecondsToTimeString';\nimport convertTimeStringToSeconds from '../../utils/convertTimeStringToSeconds';\nimport addNumberToTimeString from '../../utils/addNumberToTimeString';\n\nimport Buttons from '../Buttons';\nimport Button from '../Button';\n\nimport { BsPlayFill, BsPauseFill, BsSquareFill } from 'react-icons/bs'\n\nimport { ButtonsContainer, Container, Panel, Screen } from './styles';\n\nconst Timer = () => {\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [isOver, setIsOver] = useState(false);\n  const [timeoutID, setTimeoutID] = useState(null);\n  const [inputNumbers, setInputNumbers] = useState([]);\n  const [display, setDisplay] = useState('00:00');\n\n  const numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n  const hasTime = display !== '00:00';\n  const isBackMsg = display === 'Voltamos!!!';\n\n  useEffect(() => {\n    !isOver && setDisplay(convertSecondsToTimeString(timer));\n\n    if (isActive && timer > 0) {\n      const timeout = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n\n      setTimeoutID(timeout);\n    } else if (isActive) {\n      setIsActive(false);\n      setIsOver(true);\n    } else if (isOver) {\n      setInputNumbers([]);\n      setDisplay('Voltamos!!!');\n    }\n\n    isBackMsg && setTimeout(() => alert('O intervalo acabou!'), 200);\n\n  }, [\n      timer,\n      isActive,\n      isOver,\n      isBackMsg\n    ]\n  );\n\n  const handleStart = useCallback(() => {\n    const startingTime = convertTimeStringToSeconds(display);\n    setTimer(startingTime);\n\n    if (startingTime > 0) {\n      setIsActive(true);\n    }\n  }, [display]);\n\n  const handlePause = useCallback(() => {\n    setInputNumbers([]);\n    setIsActive(false);\n    clearTimeout(timeoutID);\n  }, [timeoutID]);\n\n  \n  const handleReset = useCallback(() => {\n    handlePause();\n    setIsOver(false);\n    setTimer(0);\n    setDisplay('00:00');\n    setInputNumbers([]);\n  }, [handlePause]);\n\n  const handleAddToTimer = useCallback((event) => {\n    const newNumber = event.target.innerText;\n\n    if (newNumber === \"0\" && !inputNumbers.length) return;\n\n    setDisplay(addNumberToTimeString([...inputNumbers, newNumber]));\n    setInputNumbers([...inputNumbers, newNumber]);\n\n  }, [inputNumbers]);\n\n  return (\n    <Container>\n      <Panel>\n        <div>\n          <Screen>\n            <h1>{display}</h1>\n          </Screen>\n          <ButtonsContainer>\n            <Button\n              isDisabled={isActive || (!hasTime && !isActive) || isOver} \n              onClick={handleStart}\n              isControl={true}\n            >\n              <BsPlayFill size={40} />\n            </Button>\n            <Button\n              isDisabled={!isActive}\n              onClick={handlePause}\n              isControl={true}\n            >\n              <BsPauseFill size={40} />\n            </Button>\n            <Button onClick={handleReset} isControl={true}>\n              <BsSquareFill />\n            </Button>\n          </ButtonsContainer>\n        </div>\n      </Panel>\n      <Panel>\n        <div>\n          <Buttons\n            isDisabled={isActive || isOver}\n            onClick={handleAddToTimer}\n            buttonsContent={numbers}\n          />\n        </div>\n      </Panel>\n    </Container>\n  )\n};\n\nexport default Timer;\n","import styled from 'styled-components';\n\nexport const TitleContainer = styled.h1`\n  color: #c7c0c0;\n  font-size: 5rem;\n  z-index: 5;\n`;","import React from 'react';\n\nimport { TitleContainer } from './styles';\n\nconst Title = (props) => <TitleContainer>{props.children}</TitleContainer>;\n\nexport default Title;\n","import React from 'react';\n\nimport GlobalStyle from './styles/global';\n\nimport Timer from './components/Timer';\nimport Title from './components/Title';\n\nconst App = () => (\n  <main>\n    <Title>Infinity StopWatch</Title>\n    <Timer />\n    <GlobalStyle />\n  </main>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}